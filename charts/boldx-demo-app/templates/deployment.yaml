apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.application.name }}
  namespace: {{ .Values.application.namespace }}
  labels:
    app: {{ .Values.application.name }}
    staging: "false"
    {{- range $key, $value := .Values.application.labels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.application.name }}
      staging: "false"
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.application.name }}
        staging: "false"
    spec:
      containers:
        - name: {{ .Values.application.name }}
          image: {{ .Values.deployment.live.image.repository }}:{{ .Values.deployment.live.image.tag }}
          imagePullPolicy: {{ .Values.deployment.imagePullPolicy }}
          ports:
            - name: {{ .Values.deployment.portName }}
              containerPort: {{ .Values.deployment.containerPort }}
          resources:
            requests:
              cpu: {{ .Values.deployment.resources.requests.cpu }}
              memory: {{ .Values.deployment.resources.requests.memory }}
            limits:
              cpu: {{ .Values.deployment.resources.limits.cpu }}
              memory: {{ .Values.deployment.resources.limits.memory }}
          env:
            - name: GELF_HOST
              value: {{ .Values.deployment.environment.GELF_HOST }}

            - name: JAEGER_HOST
              value: {{ .Values.deployment.environment.JAEGER_HOST }}

          livenessProbe:
            tcpSocket:
              port: {{ .Values.deployment.portName }}
            initialDelaySeconds: 10
            periodSeconds: 2
          readinessProbe:
            tcpSocket:
              port: {{ .Values.deployment.portName }}
            initialDelaySeconds: 10
            periodSeconds: 2




